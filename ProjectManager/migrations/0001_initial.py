# Generated by Django 3.2.7 on 2021-09-20 14:09

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('Project_ID', models.BigAutoField(primary_key=True, serialize=False)),
                ('Project_Name', models.CharField(max_length=255)),
                ('Project_Content', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('Is_Done', models.BooleanField(default=False)),
                ('Is_Confirm', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('ID', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('type_Name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('ClassID', models.CharField(max_length=10, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('Year_ID', models.CharField(max_length=10, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_Manager', models.BooleanField(default=False)),
                ('is_Teacher', models.BooleanField(default=False)),
                ('is_Reviewer', models.BooleanField(default=False)),
                ('gender', models.IntegerField(choices=[(0, 'Nữ'), (1, 'Nam')], default=0)),
                ('address', models.CharField(blank=True, default='', max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Số điện thoại phải bắt đầu với những đầu số sau (09,08,07,05,03) và có 10 chữ số.', regex='(:?^|\\s)(09|08|03|07|05)+([0-9]{8})\\b')])),
                ('Class', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='ProjectManager.schoolclass')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TeacherAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Project', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='ProjectManager.project')),
                ('Student', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='Student', to=settings.AUTH_USER_MODEL)),
                ('Teacher', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='Teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='TeacherAssignment',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='ProjectManager.teacherassignment'),
        ),
        migrations.AddField(
            model_name='project',
            name='Type',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='ProjectManager.projecttype'),
        ),
        migrations.AddField(
            model_name='project',
            name='Users',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='schoolYear',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='ProjectManager.schoolyear'),
        ),
    ]
